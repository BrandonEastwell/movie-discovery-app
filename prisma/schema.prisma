generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/.prisma/client"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id              Int               @id @default(autoincrement())
  username        String            @unique @db.VarChar(50)
  password        String            @db.VarChar(60)
  createdAt       DateTime          @default(now()) @db.Timestamp(6)
  favouritemovies FavouriteMovies[]
  watchlist       Watchlist[]
  preferences     Preferences[]
}

model FavouriteMovies {
  favouriteId Int   @id @default(autoincrement())
  userId      Int?
  movieId     Int
  user        User? @relation(fields: [userId], references: [id])

  @@unique([userId, movieId])
}

// Define the Watchlist model
model Watchlist {
  id              Int               @id @default(autoincrement())
  watchlistName   String            @db.VarChar(255)
  watchlistDesc   String?           @db.VarChar(255)
  watchlistMovies WatchlistMovies[]
  // Define foreign key relationship with the User model
  user            User              @relation(fields: [userId], references: [id])
  userId          Int

  // Ensure uniqueness of the combination of userid and watchlistid
  @@unique([userId, watchlistName])
}

// Define the WatchlistMovies model
model WatchlistMovies {
  watchlistId Int
  movieId     Int
  position    Int
  // Define foreign key relationship with the Watchlist model
  watchlist   Watchlist @relation(fields: [watchlistId], references: [id])

  @@id([watchlistId, movieId])
  // Ensure uniqueness of the position within each watchlist
  @@unique([watchlistId, position])
}

model Preferences {
  userId Int     @id
  genres String? @db.VarChar(255)
  cast   String? @db.VarChar(255)
  crew   String? @db.VarChar(255)
  user   User    @relation(fields: [userId], references: [id])
}
